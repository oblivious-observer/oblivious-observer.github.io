<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>NixOS on oblivious observer</title>
    <link>https://oblivious.observer/tags/nixos/</link>
    <description>Recent content in NixOS on oblivious observer</description>
    <image>
      <title>oblivious observer</title>
      <url>https://oblivious.observer/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</url>
      <link>https://oblivious.observer/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Fri, 03 Nov 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://oblivious.observer/tags/nixos/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Recovering a forgotten LUKS password</title>
      <link>https://oblivious.observer/posts/recovering-a-lost-password/</link>
      <pubDate>Fri, 03 Nov 2023 00:00:00 +0000</pubDate>
      
      <guid>https://oblivious.observer/posts/recovering-a-lost-password/</guid>
      <description>A friend of mine just forgot the fulldisk encryption password for a laptop.. sounds like a fun little adventure!
This is not exactly a new topic, there are nice posts about this problem such as this one, however this is how I&amp;rsquo;ve tried to tackle the problem.
The password was generated according to a couple of rules and only partially lost.
Lets assume here for the sake of this little post that the password was generated by using a word list and contained multiple words, some of which are missing.</description>
    </item>
    
    <item>
      <title>NixOS Deployment with Colmena</title>
      <link>https://oblivious.observer/posts/nixos-multi-host-deployment-with-flakes-and-colmena/</link>
      <pubDate>Fri, 21 Jul 2023 00:00:00 +0000</pubDate>
      
      <guid>https://oblivious.observer/posts/nixos-multi-host-deployment-with-flakes-and-colmena/</guid>
      <description>In the last post, I wrote about how to convert a &amp;rsquo;normal&amp;rsquo; NixOS system to one that is managed by a flake. This one will build on top of, or rather scale out of managing single hosts and dive into how to do remote management and deployment for multiple systems.
Introduction Before taking a peek into Deployments, lets set a bit of a frame of reference here first:
When talking about deployments a lot of people think about quite complex setups and the use of services such as autoscaling, instance creation etc.</description>
    </item>
    
    <item>
      <title>The Flake Awakens - Switching to a Flake-based Configuration</title>
      <link>https://oblivious.observer/posts/nixos-configuration-using-flakes/</link>
      <pubDate>Mon, 13 Mar 2023 00:00:00 +0000</pubDate>
      
      <guid>https://oblivious.observer/posts/nixos-configuration-using-flakes/</guid>
      <description>I&amp;rsquo;ve been meaning to write something for a while now, however before I can dive into a couple of more interesting topics here, I feel like it is the best to mention the transition to flakes. I&amp;rsquo;ll try and keep this one short, there are a bunch of other way more detailed posts on flakes already, however I didn&amp;rsquo;t find to many posts about how to switch from an existing configuration to using flakes and it seems to be quite doable.</description>
    </item>
    
    <item>
      <title>Tinc different! - Part II: The Two Tunnels</title>
      <link>https://oblivious.observer/posts/tincdifferent-ii-tinc-nixos-module/</link>
      <pubDate>Mon, 12 Apr 2021 00:00:00 +0200</pubDate>
      
      <guid>https://oblivious.observer/posts/tincdifferent-ii-tinc-nixos-module/</guid>
      <description>This is the second part of my little series about tinc and NixOS, where I first shortly introduced tinc and then explained how to set it up on Linux in general as well as on NixOS. This part is more or less a rewrite of a question I posted to the NixOS discourse a while ago.
For a while I&amp;rsquo;ve been using tinc on a bunch of infrastructure and so far it&amp;rsquo;s basically been rock solid: once set up nodes anywhere simply join their network and become reachable for anyone who needs to access them.</description>
    </item>
    
    <item>
      <title>Tinc different! - Part I: The Fellowship of the Ping</title>
      <link>https://oblivious.observer/posts/tincdifferent-i-tinc-nixos/</link>
      <pubDate>Sat, 03 Apr 2021 00:00:00 +0200</pubDate>
      
      <guid>https://oblivious.observer/posts/tincdifferent-i-tinc-nixos/</guid>
      <description>This is a post about tinc - a nifty little Mesh VPN service. It is also the first part of a little series of posts related to tinc and NixOS. In this first part I&amp;rsquo;ll just write a bit about how to set up tinc, then in the second part I&amp;rsquo;ll take a closer look into how writing a NixOS module can managing tinc networks easier. And finally in the third part I&amp;rsquo;ll present a rewrite of the module with a bunch more features.</description>
    </item>
    
    <item>
      <title>Blogging with orgmode, hugo and nix</title>
      <link>https://oblivious.observer/posts/blogging-with-ox-hugo-2.0/</link>
      <pubDate>Mon, 22 Mar 2021 00:00:00 +0100</pubDate>
      
      <guid>https://oblivious.observer/posts/blogging-with-ox-hugo-2.0/</guid>
      <description>How I yet again decided to set up another iteration of this blog. This time using nix, hugo and of course orgmode..
Introduction This is my third attempt of setting up an easy to use blogging workflow. The first time I chose to try out use ox-hugo as well as github pages. Initially everything worked, but I quickly stopped writing posts because my initial setup using a single orgmode file with ox-hugo did not match my notetaking workflow, where I basically generate a bunch of random files and some of them get reworked or updated enough for me to think about publishing them.</description>
    </item>
    
    <item>
      <title>NixOS encrypted VM installation</title>
      <link>https://oblivious.observer/posts/nixos-20.03-luks-zfs-kvm/</link>
      <pubDate>Sat, 29 Aug 2020 00:00:00 +0200</pubDate>
      
      <guid>https://oblivious.observer/posts/nixos-20.03-luks-zfs-kvm/</guid>
      <description>In this post I&amp;rsquo;ll describe how to set up a sparse VM image with full disk encryption and NixOS on ZFS, which can be uploaded to a VPS provider and then unlocked on boot using ssh.
First we need to create a virtual machine image file. Initially I tried using qemu-img, but somehow the image file was missing some information and the VM would not recognize a disk. Instead I went with the easy way and used virt-manager to create a new VM with the correct image size.</description>
    </item>
    
    <item>
      <title>NixOS on ZFS Install Script</title>
      <link>https://oblivious.observer/posts/nixos-zfs-install-script/</link>
      <pubDate>Wed, 26 Aug 2020 00:00:00 +0200</pubDate>
      
      <guid>https://oblivious.observer/posts/nixos-zfs-install-script/</guid>
      <description>This is a rather short post and the start of what will hopefully become a nice little series of posts related to NixOS.
I just had to bulk install NixOS on a bunch of Intel NUCs, here is a little script to automate the installation process. Some bits and pieces are taken from other installation scripts, but it&amp;rsquo;s been a while, so I don&amp;rsquo;t know who to credit for them, I&amp;rsquo;m fairly sure this wonderful post from the NixOS discourse was involved though.</description>
    </item>
    
  </channel>
</rss>
